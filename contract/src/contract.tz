{ parameter
    (or (or (or (unit %addRewards) (unit %deposit))
            (or (unit %earlyWithdraw) (unit %getMetadata)))
        (or (or (unit %start) (unit %update)) (unit %withdraw))) ;
  storage
    (pair (pair (pair (pair (list %admins address) (int %cur_round))
                      (pair (list %deadlines timestamp) (nat %penalty)))
                (pair (pair (timestamp %period) (big_map %players_deposit address mutez))
                      (pair (big_map %players_round address int) (big_map %players_status address int))))
          (pair (pair (pair (mutez %req_deposit) (timestamp %start_date))
                      (pair (bool %started) (mutez %total_deposit)))
                (pair (int %total_rounds) (mutez %total_withdrawal)))) ;
  code { LAMBDA
           (pair (pair (pair (pair (list address) int) (pair (list timestamp) nat))
                       (pair (pair timestamp (big_map address mutez))
                             (pair (big_map address int) (big_map address int))))
                 (pair (pair (pair mutez timestamp) (pair bool mutez)) (pair int mutez)))
           unit
           { CDR ;
             CAR ;
             CDR ;
             CAR ;
             IF { UNIT } { PUSH string "NOT_STARTED_YET" ; FAILWITH } } ;
         LAMBDA
           (pair (pair (pair (pair (list address) int) (pair (list timestamp) nat))
                       (pair (pair timestamp (big_map address mutez))
                             (pair (big_map address int) (big_map address int))))
                 (pair (pair (pair mutez timestamp) (pair bool mutez)) (pair int mutez)))
           mutez
           { CAR ;
             CDR ;
             CAR ;
             CDR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "NOT_FOUND_ACCOUNT_DEPOSIT" ; FAILWITH } {} } ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ; DROP 2 ; NIL operation ; PAIR }
                   { DROP ;
                     DUP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_MATCH_REQUIRED_DEPOSIT" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     PUSH int 86400 ;
                     PUSH int 5 ;
                     MUL ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     NOW ;
                     SUB ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     IF_NONE { PUSH int 0 } {} ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "ALREADY_DEPOSITED_THIS_ROUND" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     GET ;
                     AMOUNT ;
                     SWAP ;
                     IF_NONE { PUSH mutez 0 } {} ;
                     ADD ;
                     AMOUNT ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     IF_NONE { PUSH int 0 } {} ;
                     PUSH int 1 ;
                     ADD ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { PUSH string "FINISHED_ALREADY" ; FAILWITH } {} ;
                     DUP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 100 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 100 ;
                     SUB ;
                     ABS ;
                     DIG 2 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     PUSH mutez 0 ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     SWAP ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ; DIG 3 ; DROP 3 ; NIL operation ; PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 IF_LEFT
                   { DROP ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     NOW ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH bool True ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DROP ; NIL operation ; PAIR } }
               { DROP ;
                 DUP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "NOT_FINISHED_YET" ; FAILWITH } {} ;
                 DUP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 10000000 ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 PUSH mutez 0 ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 SWAP ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 ADD ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP 5 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } }

