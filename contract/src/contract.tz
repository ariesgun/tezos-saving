{ parameter
    (or (or (or (unit %addRewards) (unit %deposit))
            (or (unit %earlyWithdraw) (unit %getMetadata)))
        (or (unit %update) (unit %withdraw))) ;
  storage
    (pair (pair (pair (pair (set %admins address) (nat %penalty))
                      (pair (int %period) (big_map %players_deposit address mutez)))
                (pair (pair (big_map %players_round address int)
                            (big_map %players_status
                               address
                               (or (or (or (unit %failed) (unit %quit)) (or (unit %waiting) (unit %winning))) (unit %won))))
                      (pair (mutez %req_deposit) (mutez %rewards))))
          (pair (pair (pair (map %round_status_map nat nat) (timestamp %start_date))
                      (pair (mutez %total_deposit) (nat %total_rounds)))
                (mutez %total_withdrawal))) ;
  code { LAMBDA
           (pair (pair timestamp nat) int)
           timestamp
           { LEFT timestamp ;
             LOOP_LEFT
               { UNPAIR ;
                 UNPAIR ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; ADD ; RIGHT (pair (pair timestamp nat) int) }
                    { DUP 3 ;
                      PUSH nat 1 ;
                      DIG 3 ;
                      SUB ;
                      ABS ;
                      DIG 3 ;
                      DIG 3 ;
                      ADD ;
                      PAIR ;
                      PAIR ;
                      LEFT timestamp } } } ;
         LAMBDA
           (pair (pair (pair (pair (set address) nat) (pair int (big_map address mutez)))
                       (pair (pair (big_map address int) (big_map address (or (or (or unit unit) (or unit unit)) unit)))
                             (pair mutez mutez)))
                 (pair (pair (pair (map nat nat) timestamp) (pair mutez nat)) mutez))
           unit
           { CDR ;
             CAR ;
             CAR ;
             CDR ;
             NOW ;
             COMPARE ;
             GE ;
             IF { UNIT } { PUSH string "NOT_STARTED_YET" ; FAILWITH } } ;
         LAMBDA
           (pair timestamp int)
           int
           { UNPAIR ;
             PUSH int 86400 ;
             DIG 2 ;
             MUL ;
             SWAP ;
             NOW ;
             SUB ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR } ;
         LAMBDA
           (pair (pair (pair (pair (set address) nat) (pair int (big_map address mutez)))
                       (pair (pair (big_map address int) (big_map address (or (or (or unit unit) (or unit unit)) unit)))
                             (pair mutez mutez)))
                 (pair (pair (pair (map nat nat) timestamp) (pair mutez nat)) mutez))
           mutez
           { CAR ;
             CAR ;
             CDR ;
             CDR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "NOT_FOUND_ACCOUNT_DEPOSIT" ; FAILWITH } {} } ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DIG 5 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 3 ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     IF { DROP ; PUSH string "NOT_AN_ADMIN" ; FAILWITH }
                        { DUP ;
                          CDR ;
                          AMOUNT ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR }
                   { DROP ;
                     DUP ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_MATCH_REQUIRED_DEPOSIT" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     IF_NONE { PUSH int 0 } {} ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "ALREADY_DEPOSITED_THIS_ROUND" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     PUSH int 0 ;
                     SWAP ;
                     IF_NONE { PUSH int 0 } {} ;
                     DIG 2 ;
                     SUB ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "MISSED_DEPOSIT_DEADLINE" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     GET ;
                     AMOUNT ;
                     SWAP ;
                     IF_NONE { PUSH mutez 0 } {} ;
                     ADD ;
                     AMOUNT ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     IF_NONE { PUSH int 0 } {} ;
                     PUSH int 1 ;
                     ADD ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     UNIT ;
                     RIGHT unit ;
                     RIGHT (or unit unit) ;
                     LEFT unit ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 6 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     ABS ;
                     DUP 6 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     ADD ;
                     GET ;
                     DUP 7 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PUSH nat 1 ;
                     DIG 2 ;
                     IF_NONE { PUSH nat 0 } {} ;
                     ADD ;
                     SOME ;
                     PUSH nat 1 ;
                     DIG 3 ;
                     ADD ;
                     UPDATE ;
                     DUP 6 ;
                     CDR ;
                     CDR ;
                     DUP 7 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 6 ;
                     PAIR ;
                     DUP 7 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 6 ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 6 ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DROP ;
                     DUP ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { PUSH string "FINISHED_ALREADY" ; FAILWITH } {} ;
                     DUP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 100 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH nat 100 ;
                     SUB ;
                     ABS ;
                     DIG 2 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH mutez 0 ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     SWAP ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     ADD ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     UNIT ;
                     RIGHT unit ;
                     LEFT (or unit unit) ;
                     LEFT unit ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DUP 4 ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 ; NIL operation ; PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DIG 4 ;
                 DIG 5 ;
                 DROP 4 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 PUSH int 0 ;
                 SWAP ;
                 IF_NONE { PUSH int 0 } {} ;
                 DIG 2 ;
                 SUB ;
                 COMPARE ;
                 GT ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 IF { UNIT ; LEFT unit ; RIGHT (or unit unit) ; LEFT unit }
                    { UNIT ; RIGHT unit ; RIGHT (or unit unit) ; LEFT unit } ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DIG 3 ;
                 DROP 2 ;
                 DUP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "NOT_FINISHED_YET" ; FAILWITH } {} ;
                 DUP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 10000000 ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PUSH mutez 0 ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 SWAP ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 ADD ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } }

